# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   
#Given an array of hashes, validates the following:
#  - The passed parameter is an array
#  - Array member objects are hashes
#  - Each hash has a 'user' and 'args' key
#
#If an empty array is passed, then this function validates successfully.
#
#Passing Examples:
#
#  $vnc_arusso = { 'user' => 'arusso',
#                  'args' => '' }
#  $vnc_brusso = { 'user' => 'brusso',
#                  'args' => '' }
#  validate_vnc_servers([ $vnc_arusso ])
#  validate_vnc_servers([ $vnc_arusso, $vnc_brusso ])
#  validate_vnc_servers([ ])
#
#Failing Examples:
#
#   $vnc_arusso = { 'user' => 'arusso',
#                   'arg' => '' }
#   validate_vnc_servers([ $vnc_arusso ]) # args key not specified
#   validate_vnc_servers([ '' ]) # array member not a hash
#   validate_vnc_servers($vnc_arusso) # array not passed
#
#
#
Puppet::Functions.create_function(:'validate_vnc_servers') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    server_array = args[0]
    if server_array.is_a?(Array)
      server_array.each do |sh|
        if sh.is_a?(Hash)
          raise Puppet::ParseError, \
            "Hash object must have 'user' and 'args' keys" \
            unless sh.has_key?('user') and sh.has_key?('args')
        else
          raise Puppet::ParseError, "Array member not a Hash"
        end
      end
    else
      raise Puppet::ParseError, "Parameter must be an Array"
    end
  
  end
end
